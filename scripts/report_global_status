#!/bin/bash
sas_id=${1}
COBALT_HEAD=cbm2head.control.lofar
PARSET_PATH=/opt/lofar/nfs/parset/ # cobalt 2
#PARSET_PATH=/opt/lofar/var/run
COBALT_LOG_DIR=/opt/lofar/var/log
#COBALT_LOG_DIR=/localhome/lofarsystem/log
#PARSET_PATH=/localhome/lofarsystem/parsets/


function remote_parset_lookup() {
    parset_host=$1
    sas_id=$2
    parset_key=$3

    ssh $parset_host "grep $parset_key ${PARSET_PATH}/rtcp-$sas_id.parset" 2>/dev/null;
}


function sas_id_project() {
    sas_id=$1
    remote_parset_lookup lofarsys@${COBALT_HEAD} $sas_id 'Observation.Campaign.name'|sed -e's/=/ /g' -e 's/"/ /g'|awk '{ print $2 }';
}

function sas_id_path() {     
    sas_id=$1;     
    remote_parset_lookup lofarsys@$COBALT_HEAD $sas_id 'Observation.DataProducts.Output_Correlated.storageClusterPartition'|sed -e's/=/ /g' -e 's/"/ /g'|awk '{ print $2 }'; 
}

function hostname_fqdn() {
    # Return the fully qualified domain name of a LOFAR server
    # Sadly -- on some machines -- hostname returns the FQDN
    # while hostname -f returns the short name >_<
    (hostname;hostname -f)|awk '{ print length, $0 }' | sort -n -s | cut -d" " -f2-
}


project_id=`sas_id_project ${sas_id}`
data_products_location=`sas_id_path $sas_id`

case `hostname_fqdn` in
    lhn00*)
        INSPECT_ROOT=/globaldata/inspect
        echo "report_global_status for ${sas_id}"
        if [[ ! -e  ${INSPECT_ROOT}/${sas_id}/file-sizes.txt ]] ; then
            echo "  - determining file sizes"
            cexec locus: "du --apparent-size -sm /data/L${sas_id}/*" > ${INSPECT_ROOT}/${sas_id}/file-sizes.txt
        fi
        sleep 2
        if [[ ! -e  ${INSPECT_ROOT}/${sas_id}/rtcp-${sas_id}.loss ]] ; then
            echo "  - determining input losses"
            ssh -A cbt001-10gb01 "tail -100000 log/rtcp-${sas_id}.log|grep loss|sort -k 8"|grep GPUProc > ${INSPECT_ROOT}/${sas_id}/rtcp-${sas_id}.loss
        fi
        sleep 2
        if [[ ! -e  ${INSPECT_ROOT}/${sas_id}/rtcp-${sas_id}.errors ]] ; then
            echo "  - determining warnings / errors"
            ssh -A cbt001-10gb01 "egrep 'ERR|WARN|FATAL|runObservation|xception|acktrace|\#(0|1|2|3|4|5|6|7|8|9) |Signalling|Alarm|SIG|feed-back|Result code' log/rtcp-${sas_id}.log"|grep -v Flagging | egrep -v "(to payload errors is|Total discarded packets|transposeInput ran at|Run-time budget exceeded|BeamFormer\] I lost 0|BeamFormer\] Did not send 0)" > $INSPECT_ROOT/${sas_id}/rtcp-${sas_id}.errors
        fi
        ;;


    *)
        INSPECT_ROOT=/dev/shm
        echo "report_global_status for ${sas_id}"
        mkdir -p ${INSPECT_ROOT}/${sas_id}
        if [[ ! -e  ${INSPECT_ROOT}/${sas_id}/file-sizes.txt ]] ; then
            echo "  - determining file sizes"
            du -B 1 -sm $data_products_location/${project_id}/L${sas_id}/*/* > ${INSPECT_ROOT}/${sas_id}/file-sizes.txt
        fi
        sleep 2
        if [[ ! -e  ${INSPECT_ROOT}/${sas_id}/f0seqnr-sizes.txt ]] ; then
            echo "  - determining f0seqnr sizes"
            du -b --apparent-size $data_products_location/${project_id}/L${sas_id}/uv/*/table.f0seqnr > ${INSPECT_ROOT}/${sas_id}/f0seqnr-sizes.txt
        fi
        sleep 2
        if [[ ! -e  ${INSPECT_ROOT}/${sas_id}/bfloss-${sas_id}.loss ]] ; then
            echo "  - determining cobalt output losses"
            ssh -A ${COBALT_HEAD} "bfloss ${sas_id}" > ${INSPECT_ROOT}/${sas_id}/bfloss-${sas_id}.loss
        fi
        if [[ ! -e  ${INSPECT_ROOT}/${sas_id}/rtcp-${sas_id}.loss ]] ; then
            echo "  - determining input losses"
            ssh -A ${COBALT_HEAD} "tail -100000 log/rtcp-${sas_id}.log|grep loss|sort -k 8"|grep GPUProc > ${INSPECT_ROOT}/${sas_id}/rtcp-${sas_id}.loss
        fi
        sleep 2
        if [[ ! -e  ${INSPECT_ROOT}/${sas_id}/rtcp-${sas_id}.errors ]] ; then
            echo "  - determining warnings / errors"
            ssh -A ${COBALT_HEAD} "egrep 'ERR|WARN|FATAL|runObservation|xception|acktrace|\#(0|1|2|3|4|5|6|7|8|9) |Signalling|Alarm|SIG|feed-back|Result code' log/rtcp-${sas_id}.log"|grep -v Flagging | egrep -v "(to payload errors is|Total discarded packets|transposeInput ran at|Run-time budget exceeded|BeamFormer\] I lost 0|BeamFormer\] Did not send 0)" > $INSPECT_ROOT/${sas_id}/rtcp-${sas_id}.errors
        fi
        sleep 2
        if [[ ! -e  ${INSPECT_ROOT}/${sas_id}/rtcp-${sas_id}.losserrors ]] ; then
            echo "  - determining warnings / errors"
            ssh -A ${COBALT_HEAD} "egrep 'ERR|WARN|FATAL|runObservation|xception|acktrace|\#(0|1|2|3|4|5|6|7|8|9) |Signalling|Alarm|SIG|feed-back|Result code' log/rtcp-${sas_id}.log"| grep -v Flagging | egrep "(to payload errors is|Total discarded packets|transposeInput ran at|Run-time budget exceeded|BeamFormer\] I lost |BeamFormer\] Did not send )" > $INSPECT_ROOT/${sas_id}/rtcp-${sas_id}.losserrors
        fi
        sleep 2
        # Try to obtain the parset named Lxxxxxx.parset first
        if [[ ! -e  ${INSPECT_ROOT}/${sas_id}/L${sas_id}.parset ]] ; then
            echo "   - checking for L${sas_id}.parset in "${PARSET_PATH}
            scp ${COBALT_HEAD}:/${PARSET_PATH}/L${sas_id}.parset ${INSPECT_ROOT}/${sas_id}/L${sas_id}.parset

            # If the Lxxxxxx parset has not been copied, try to obtain the parset named rtcp-xxxxxx.parset
            if [[ ! -e  ${INSPECT_ROOT}/${sas_id}/L${sas_id}.parset ]] ; then
                echo "   - checking for rtcp-${sas_id}.parset in "${PARSET_PATH}
                scp ${COBALT_HEAD}:${PARSET_PATH}/rtcp-${sas_id}.parset ${INSPECT_ROOT}/${sas_id}/rtcp-${sas_id}.parset
            else
                echo "   - existing parset found: ${INSPECT_ROOT}/${sas_id}/rtcp-${sas_id}.parset"
            fi
        else
            echo "   - existing parset found: ${INSPECT_ROOT}/${sas_id}/L${sas_id}.parset"
        fi
        ;;
esac
              
              
